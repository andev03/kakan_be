version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 12345
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  eureka:
    image: andev368/eureka:latest
    container_name: eureka
    ports:
      - "8070:8070"
    environment:
      SPRING_PROFILES_ACTIVE: prod
    networks:
      - backend

  gateway:
    image: andev368/gateway:latest
    container_name: gateway
    ports:
      - "8800:8800"
    depends_on:
      eureka:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: prod
    networks:
      - backend

  admission-advisor-service:
    image: andev368/admission-advisor-service:latest
    container_name: admission-advisor-service
    ports:
      - "8000:8000"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/admission_advisor_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: 12345
    depends_on:
      postgres:
        condition: service_healthy
      eureka:
        condition: service_started
    networks:
      - backend

  forum-service:
    image: andev368/forum-service:latest
    container_name: forum-service
    ports:
      - "8001:8001"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/forum_service_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: 12345
    depends_on:
      postgres:
        condition: service_healthy
      eureka:
        condition: service_started
    networks:
      - backend

  school-service:
    image: andev368/school-service:latest
    container_name: school-service
    ports:
      - "8002:8002"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/school_service_db
    depends_on:
      mongo:
        condition: service_healthy
      eureka:
        condition: service_started
    networks:
      - backend

  user-service:
    image: andev368/user-service:latest
    container_name: user-service
    ports:
      - "8003:8003"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/user_service_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: 12345
    depends_on:
      postgres:
        condition: service_healthy
      eureka:
        condition: service_started
    networks:
      - backend

  order-service:
    image: andev368/order-service:latest
    container_name: order-service
    ports:
      - "8004:8004"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/order_service_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: 12345
    depends_on:
      postgres:
        condition: service_healthy
      eureka:
        condition: service_started
    networks:
      - backend

  payment-service:
    image: andev368/payment-service:latest
    container_name: payment-service
    ports:
      - "8005:8005"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/payment_service_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: 12345
    depends_on:
      postgres:
        condition: service_healthy
      eureka:
        condition: service_started
    networks:
      - backend

volumes:
  pgdata:

networks:
  backend:
    driver: bridge

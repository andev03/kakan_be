server:
  port: 8003
spring:
  application:
    name: user-service
  security:
    user:
      name: user
      password: 12345
    oauth2:
      client:
        registration:
            google:
                client-id: 900209106788-hfec1pa7dnh1enpbptlaenngudlsamen.apps.googleusercontent.com
                client-secret: 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
                scope:
                    - openid
                    - profile
                    - email
                redirect-uri: "{baseUrl}/login/oauth2/code/google"
        provider:
            google:
                authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
                token-uri: https://oauth2.googleapis.com/token
                user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
                user-name-attribute: sub
  kafka:
    bootstrap-servers: localhost:9092

    # consumer (User láº¯ng nghe payment.succeeded)
    consumer:
      group-id: user-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      properties:
        spring.json.use.type.headers: false
        spring.json.trusted.packages: "com.kakan.user_service.dto"
  datasource:
    url: jdbc:postgresql://localhost:5432/user_service_db
    username: postgres
    password: 12345
  main:
    banner-mode: off
    lazy-initialization: true
  jpa:
    properties:
      hibernate:
        format_sql: true
    show-sql: true
  sql:
    init:
      mode: always
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB


logging:
  level:
    org.springframework.kafka: DEBUG
    org.apache.kafka.clients.producer.KafkaProducer: TRACE
    org.springframework.kafka.listener: DEBUG
    org.apache.kafka.clients.consumer: TRACE
    root: warn
    org:
      hibernate:
        SQL: trace
        orm:
          jdbc:
            bind: trace

springdoc:
  swagger-ui:
    disable-swagger-default-url: true
    path: /api

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

grpc:
  server:
    port: 9090
    host: user-service
    security:
      enabled: false

frontend:
  url: http://localhost:5173